// <auto-generated />
using System;
using HotelBookingApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HotelBookingApi.Migrations
{
    [DbContext(typeof(ApiContext))]
    [Migration("20250413123535_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HotelBookingApi.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("RoomId")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CheckInDate = new DateTime(2025, 4, 20, 0, 0, 0, 0, DateTimeKind.Utc),
                            CheckOutDate = new DateTime(2025, 4, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            RoomId = 1,
                            Status = "Confirmed",
                            UserId = 3
                        },
                        new
                        {
                            Id = 2,
                            CheckInDate = new DateTime(2025, 5, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CheckOutDate = new DateTime(2025, 5, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            RoomId = 2,
                            Status = "Cancelled",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("HotelBookingApi.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("HotelId")
                        .HasColumnType("integer");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("UserId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HotelId = 1,
                            Position = "Manager",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            HotelId = 2,
                            Position = "Receptionist",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("HotelBookingApi.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Organizer")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2025, 6, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "An annual conference for industry professionals.",
                            Location = "Conference Hall A",
                            Name = "Annual Conference",
                            Organizer = "John Doe"
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2025, 7, 20, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "A beautiful wedding ceremony for 200 guests.",
                            Location = "Banquet Hall",
                            Name = "Wedding Ceremony",
                            Organizer = "Jane Smith"
                        });
                });

            modelBuilder.Entity("HotelBookingApi.Models.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Feedbacks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 4, 13, 12, 35, 34, 981, DateTimeKind.Utc).AddTicks(2823),
                            EmployeeId = 1,
                            Message = "The new booking system is very efficient."
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 4, 13, 12, 35, 34, 981, DateTimeKind.Utc).AddTicks(2824),
                            EmployeeId = 2,
                            Message = "We need more training on the inventory management system."
                        });
                });

            modelBuilder.Entity("HotelBookingApi.Models.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.HasKey("Id");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main Street",
                            Email = "info@grandhotel.com",
                            Name = "Grand Hotel",
                            PhoneNumber = "123-456-7890"
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Beach Road",
                            Email = "contact@oceanview.com",
                            Name = "Ocean View",
                            PhoneNumber = "987-654-3210"
                        });
                });

            modelBuilder.Entity("HotelBookingApi.Models.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Inventories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LastUpdated = new DateTime(2025, 4, 13, 12, 35, 34, 981, DateTimeKind.Utc).AddTicks(691),
                            Name = "Towels",
                            Quantity = 50
                        },
                        new
                        {
                            Id = 2,
                            LastUpdated = new DateTime(2025, 4, 13, 12, 35, 34, 981, DateTimeKind.Utc).AddTicks(691),
                            Name = "Shampoo",
                            Quantity = 30
                        },
                        new
                        {
                            Id = 3,
                            LastUpdated = new DateTime(2025, 4, 13, 12, 35, 34, 981, DateTimeKind.Utc).AddTicks(692),
                            Name = "Soap",
                            Quantity = 100
                        });
                });

            modelBuilder.Entity("HotelBookingApi.Models.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Logs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Action = "Created a booking",
                            Timestamp = new DateTime(2025, 4, 13, 12, 35, 34, 981, DateTimeKind.Utc).AddTicks(660),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Action = "Updated room details",
                            Timestamp = new DateTime(2025, 4, 13, 12, 35, 34, 981, DateTimeKind.Utc).AddTicks(662),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("HotelBookingApi.Models.MaintenanceRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int?>("RoomId")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("MaintenanceRequests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 4, 13, 12, 35, 34, 981, DateTimeKind.Utc).AddTicks(1425),
                            Description = "Air conditioning not working",
                            RoomId = 1,
                            Status = "Pending"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 4, 13, 12, 35, 34, 981, DateTimeKind.Utc).AddTicks(1426),
                            Description = "Leaking faucet in bathroom",
                            RoomId = 2,
                            Status = "In Progress",
                            UpdatedAt = new DateTime(2025, 4, 13, 12, 35, 34, 981, DateTimeKind.Utc).AddTicks(1427)
                        });
                });

            modelBuilder.Entity("HotelBookingApi.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<int>("BookingId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 250.00m,
                            BookingId = 1,
                            PaymentDate = new DateTime(2025, 4, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            PaymentMethod = "Credit Card"
                        },
                        new
                        {
                            Id = 2,
                            Amount = 375.00m,
                            BookingId = 2,
                            PaymentDate = new DateTime(2025, 4, 20, 0, 0, 0, 0, DateTimeKind.Utc),
                            PaymentMethod = "Cash"
                        });
                });

            modelBuilder.Entity("HotelBookingApi.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("HotelId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HotelId = 1,
                            Price = 50.00m,
                            RoomNumber = 101,
                            Type = "Single"
                        },
                        new
                        {
                            Id = 2,
                            HotelId = 1,
                            Price = 75.00m,
                            RoomNumber = 102,
                            Type = "Double"
                        },
                        new
                        {
                            Id = 3,
                            HotelId = 2,
                            Price = 120.00m,
                            RoomNumber = 201,
                            Type = "Suite"
                        });
                });

            modelBuilder.Entity("HotelBookingApi.Models.Shift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Shifts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmployeeId = 1,
                            EndTime = new DateTime(2025, 4, 20, 16, 0, 0, 0, DateTimeKind.Utc),
                            Role = "Manager",
                            StartTime = new DateTime(2025, 4, 20, 8, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2,
                            EmployeeId = 2,
                            EndTime = new DateTime(2025, 4, 20, 23, 59, 59, 0, DateTimeKind.Utc),
                            Role = "Receptionist",
                            StartTime = new DateTime(2025, 4, 20, 16, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("HotelBookingApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = "$2a$11$O/yKVJZZZiCuCVwkHlilvezkvyLq32axmVVGz7OHqOqx/uxeoeSji",
                            Role = "Admin",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            PasswordHash = "$2a$11$armLdhOdAWMfMuczK2IoW.NHspaB7DDrXsprI3Tg6svqTZfFaTg/O",
                            Role = "IT",
                            Username = "itsupport"
                        },
                        new
                        {
                            Id = 3,
                            PasswordHash = "$2a$11$wdykDlOTS5Z/aQYsAEAcB.qkg/wZUuN5YxgPdyqSf6dkhlo78eHjG",
                            Role = "Employee",
                            Username = "employee"
                        });
                });

            modelBuilder.Entity("HotelBookingApi.Models.Booking", b =>
                {
                    b.HasOne("HotelBookingApi.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelBookingApi.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HotelBookingApi.Models.Employee", b =>
                {
                    b.HasOne("HotelBookingApi.Models.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelBookingApi.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HotelBookingApi.Models.Feedback", b =>
                {
                    b.HasOne("HotelBookingApi.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("HotelBookingApi.Models.Log", b =>
                {
                    b.HasOne("HotelBookingApi.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HotelBookingApi.Models.MaintenanceRequest", b =>
                {
                    b.HasOne("HotelBookingApi.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("HotelBookingApi.Models.Payment", b =>
                {
                    b.HasOne("HotelBookingApi.Models.Booking", "Booking")
                        .WithMany("Payments")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("HotelBookingApi.Models.Room", b =>
                {
                    b.HasOne("HotelBookingApi.Models.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("HotelBookingApi.Models.Shift", b =>
                {
                    b.HasOne("HotelBookingApi.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("HotelBookingApi.Models.Booking", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("HotelBookingApi.Models.Hotel", b =>
                {
                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
